<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ibenben.mapper.SupplierProductMappingMapper" >
  <resultMap id="BaseResultMap" type="com.ibenben.domain.SupplierProductMapping" >
    <id column="supplier_product_mapping_id" property="supplierProductMappingId" jdbcType="BIGINT" />
    <result column="product_supplier_id" property="productSupplierId" jdbcType="BIGINT" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="tax_rate" property="taxRate" jdbcType="INTEGER" />
    <result column="deduction_rate" property="deductionRate" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="created_user" property="createdUser" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="product_category_id" property="productCategoryId" jdbcType="INTEGER" />
    <result column="output_rate" property="outputRate" jdbcType="INTEGER" />
    <result column="product_finance_type_id" property="productFinanceTypeId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="java.util.Map" id="BaseMap">
    <result column="product_supplier_id" property="product_supplier_id" jdbcType="BIGINT" />
    <result column="product_id" property="product_id" jdbcType="INTEGER" />
    <result column="tax_rate" property="tax_rate" jdbcType="DECIMAL" />
    <result column="deduction_rate" property="deduction_rate" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="product_category_id" property="product_category_id" jdbcType="INTEGER" />
    <result column="output_rate" property="output_rate" jdbcType="DECIMAL" />
    <result column="product_category_name" property="product_category_name" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap type="java.util.Map" id="TaxDefaultMap">
    <result column="product_category_id" property="product_category_id" jdbcType="INTEGER" />
    <result column="product_category_name" property="product_category_name" jdbcType="VARCHAR" />
    <result column="tax_rate" property="tax_rate" jdbcType="DECIMAL" />
    <result column="deduction_rate" property="deduction_rate" jdbcType="DECIMAL" />
    <result column="output_rate" property="output_rate" jdbcType="DECIMAL" />
  </resultMap>
  
  <resultMap type="java.util.Map" id="TaxListMap">
    <id column="supplier_product_mapping_id" property="supplier_product_mapping_id" jdbcType="BIGINT" />
    <result column="product_supplier_id" property="product_supplier_id" jdbcType="BIGINT" />
    <result column="product_id" property="product_id" jdbcType="INTEGER" />
    <result column="tax_rate" property="tax_rate" jdbcType="DECIMAL" />
    <result column="deduction_rate" property="deduction_rate" jdbcType="DECIMAL" />
    <result column="created_time" property="created_time" jdbcType="TIMESTAMP" />
    <result column="created_user" property="created_user" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="product_category_id" property="product_category_id" jdbcType="INTEGER" />
    <result column="output_rate" property="output_rate" jdbcType="DECIMAL" />
    <result column="product_finance_type_id" property="product_finance_type_id" jdbcType="INTEGER" />
    <result column="product_category_name" property="product_category_name" jdbcType="VARCHAR" />
    <result column="product_name" property="product_name" jdbcType="VARCHAR" />
    <result column="product_supplier_name" property="product_supplier_name" jdbcType="VARCHAR" />
    <result column="product_finance_type_name" property="product_finance_type_name" jdbcType="VARCHAR" />
    <result column="tax_rate_id" property="tax_rate_id" jdbcType="INTEGER" />
    <result column="deduction_rate_id" property="deduction_rate_id" jdbcType="INTEGER" />
    <result column="output_rate_id" property="output_rate_id" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    supplier_product_mapping_id, product_supplier_id, product_id, tax_rate, deduction_rate, 
    created_time, created_user, status,product_category_id,output_rate,product_finance_type_id
  </sql>
  
  <select id="getTaxDefault" parameterType="java.util.Map" resultMap="TaxDefaultMap">
    select
    pc.product_category_id,
    pc.product_category_name,
    pcstm.tax_rate,
    pcstm.deduction_rate,
    pcstm.output_rate
    from
    product p
    inner join product_category pc on pc.product_category_id = p.product_category_id
    inner join product_category_supplier_type_mapping pcstm on pcstm.product_category_id = p.product_category_id
    inner join product_supplier ps on pcstm.supplier_type = ps.supplier_type
    where
    ps.product_supplier_id = #{product_supplier_id,jdbcType=BIGINT} and
    p.product_id = #{product_id,jdbcType=INTEGER}
  </select>
  <select id="getListBySupplierProductReq" parameterType="java.util.List" resultMap="BaseMap">
    select
   	spm.product_supplier_id,
   	spm.product_id,
   	tr1.tax_rate,
   	tr2.tax_rate deduction_rate,
   	spm.product_category_id,
   	tr3.tax_rate output_rate,
   	spm.status,
   	pc.product_category_name
   	from
   	supplier_product_mapping spm
   	left join product_category pc on spm.product_category_id = pc.product_category_id
   	left join tax_rate tr1 on tr1.tax_rate_id = spm.tax_rate
   	left join tax_rate tr2 on tr2.tax_rate_id = spm.deduction_rate
   	left join tax_rate tr3 on tr3.tax_rate_id = spm.output_rate
   	<where>
   		spm.status = 'OK'
   		<if test="list != null">
   		<foreach collection="list" index="index" item="ids" open="and ((" separator=") or (" close=")">
	   	    spm.product_supplier_id = #{ids.productSupplierId,jdbcType=BIGINT}
	   	    and spm.product_id = #{ids.productId,jdbcType=INTEGER}
	   	</foreach>
	   	)
	   	</if>
   	</where>
  </select>
  <select id="getProductSupplierListByProductId" resultType="java.util.Map">
  	select 
		p.product_id,
		p.product_name,
		t.tax_rate as tax_rate,
		d.tax_rate as deduction_rate,
		o.tax_rate as output_rate,
		ps.product_supplier_id,
		ps.product_supplier_name,
		ps.product_supplier_code,
		ps.product_type,
		ps.supplier_type,
		ps.product_supplier_quanlification,
		ps.created_time,
	  	ps.created_user,
		ps.supplier_contact_name,
		ps.supplier_contact_mobile,
		ps.status
	from product p 
	inner join supplier_product_mapping spm on p.product_id = spm.product_id and spm.`status`='OK'
	inner join product_supplier ps on spm.product_supplier_id = ps.product_supplier_id 
	left join tax_rate t on t.tax_rate_id = spm.tax_rate
	left join tax_rate d on d.tax_rate_id = spm.deduction_rate
	left join tax_rate o on o.tax_rate_id = spm.output_rate
	where
		p.status = 'OK' and
		p.product_id = #{product_id}
  </select>
  
  <insert id="setSupplierProduct" parameterType="java.util.Map">
  	insert into supplier_product_mapping 
  	(product_supplier_id,product_id,tax_rate,deduction_rate,created_time,created_user,product_category_id,output_rate,product_finance_type_id,status)
  	values
  	(#{product_supplier_id,jdbcType=BIGINT},#{product_id,jdbcType=INTEGER},#{tax_rate,jdbcType=INTEGER},#{deduction_rate,jdbcType=INTEGER},
  	#{created_time,jdbcType=TIMESTAMP},#{created_user,jdbcType=VARCHAR},#{product_category_id,jdbcType=INTEGER},#{output_rate,jdbcType=INTEGER},
  	#{product_finance_type_id,jdbcType=INTEGER},'INIT')
  </insert>
  
  <update id="delTax" parameterType="java.util.Map">
    update supplier_product_mapping
    set status = null
    where
    supplier_product_mapping_id = #{supplier_product_mapping_id,jdbcType=BIGINT}
  </update>
  
  <select id="getRateList" parameterType="java.util.Map" resultMap="TaxListMap">
    select
    tr1.tax_rate,tr2.tax_rate deduction_rate,tr3.tax_rate output_rate,
    spm.supplier_product_mapping_id,spm.product_supplier_id,spm.product_id,
    spm.created_time,spm.created_user,spm.status,spm.product_category_id,spm.product_finance_type_id
    from supplier_product_mapping spm
    left join tax_rate tr1 on spm.tax_rate = tr1.tax_rate_id
    left join tax_rate tr2 on spm.deduction_rate = tr2.tax_rate_id
    left join tax_rate tr3 on spm.output_rate = tr3.tax_rate_id
    <where>
      <if test="product_supplier_id != '' and product_supplier_id != null">
        spm.product_supplier_id = #{product_supplier_id,jdbcType=BIGINT}
      </if>
      <if test="product_id != '' and product_id != null">
        and spm.product_id = #{product_id,jdbcType=INTEGER}
      </if>
      <if test="status != '' and status != null">
        and spm.status = #{status,jdbcType=CHAR}
      </if>
    </where>
  </select>
  <select id="getTaxList" resultType="java.util.Map" parameterType="java.lang.Long">
    select
    spm.supplier_product_mapping_id, spm.product_supplier_id, spm.product_id, tr1.tax_rate, tr2.tax_rate deduction_rate, 
	spm.created_time, spm.created_user, spm.status,spm.product_category_id,tr3.tax_rate output_rate,spm.product_finance_type_id,
	pc.product_category_name,p.product_name,ps.product_supplier_name,spm.tax_rate tax_rate_id,spm.deduction_rate deduction_rate_id,
    pft.product_finance_type_name,spm.output_rate output_rate_id,m.merchant_name
    from
    supplier_product_mapping spm
    left join tax_rate tr1 on tr1.tax_rate_id = spm.tax_rate
    left join tax_rate tr2 on tr2.tax_rate_id = spm.deduction_rate
    left join tax_rate tr3 on tr3.tax_rate_id = spm.output_rate
    left join product_finance_type pft on pft.product_finance_type_id = spm.product_finance_type_id
    left join product_supplier ps on spm.product_supplier_id = ps.product_supplier_id
    left join product p on spm.product_id = p.product_id
    left join product_category pc on pc.product_category_id = spm.product_category_id
    left join merchant m on m.merchant_id = p.merchant_id
    where
    spm.product_supplier_id = #{product_supplier_id,jdbcType=BIGINT} and
    ps.product_supplier_id = #{product_supplier_id,jdbcType=BIGINT} and
    spm.status is not null 
  </select>
  
  <select id="isExistSupplier" parameterType="java.util.Map" resultType="java.lang.Integer">
    select
    count(*)
    from
    supplier_product_mapping
    where
    product_supplier_id = #{product_supplier_id,jdbcType=BIGINT} and
    product_id = #{product_id,jdbcType=INTEGER} and
    status is not null
  </select>
  
  <update id="editTax" parameterType="java.util.Map">
    update
    supplier_product_mapping
    set product_category_id = #{product_category_id,jdbcType=INTEGER},
    tax_rate=#{tax_rate,jdbcType=INTEGER},deduction_rate=#{deduction_rate,jdbcType=INTEGER},
    output_rate = #{output_rate,jdbcType=INTEGER},product_finance_type_id = #{product_finance_type_id,jdbcType=INTEGER},
    status = 'INIT'
    where supplier_product_mapping_id = #{supplier_product_mapping_id,jdbcType=BIGINT}
  </update>
  
  <update id="taxCheck" parameterType="java.util.Map">
    update
    supplier_product_mapping
    set
    status = #{status,jdbcType=CHAR}
    where
    supplier_product_mapping_id = #{supplier_product_mapping_id,jdbcType=BIGINT}
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from supplier_product_mapping
    where supplier_product_mapping_id = #{supplierProductMappingId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from supplier_product_mapping
    where supplier_product_mapping_id = #{supplierProductMappingId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ibenben.domain.SupplierProductMapping" >
    insert into supplier_product_mapping (supplier_product_mapping_id, product_supplier_id, 
      product_id, tax_rate, deduction_rate, 
      created_time, created_user, status,product_category_id,output_rate,product_finance_type_id
      )
    values (#{supplierProductMappingId,jdbcType=BIGINT}, #{productSupplierId,jdbcType=BIGINT}, 
      #{productId,jdbcType=INTEGER}, #{taxRate,jdbcType=INTEGER}, #{deductionRate,jdbcType=INTEGER}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{createdUser,jdbcType=VARCHAR}, #{status,jdbcType=CHAR},
      #{productCategoryId,jdbcType=INTEGER},#{outputRate,jdbcType=INTEGER},#{productFinanceTypeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ibenben.domain.SupplierProductMapping" >
    insert into supplier_product_mapping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="supplierProductMappingId != null" >
        supplier_product_mapping_id,
      </if>
      <if test="productSupplierId != null" >
        product_supplier_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="taxRate != null" >
        tax_rate,
      </if>
      <if test="deductionRate != null" >
        deduction_rate,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdUser != null" >
        created_user,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="productCategoryId != null">
        product_category_id,
      </if>
      <if test="outputRate != null">
        output_rate,
      </if>
      <if test="productFinanceTypeId != null">
        product_finance_type_id
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="supplierProductMappingId != null" >
        #{supplierProductMappingId,jdbcType=BIGINT},
      </if>
      <if test="productSupplierId != null" >
        #{productSupplierId,jdbcType=BIGINT},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="taxRate != null" >
        #{taxRate,jdbcType=INTEGER},
      </if>
      <if test="deductionRate != null" >
        #{deductionRate,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="productCategoryId != null">
        #{productCategoryId,jdbcType=INTEGER},
      </if>
      <if test="outputRate != null">
        #{outputRate,jdbcType=INTEGER},
      </if>
      <if test="productFinanceTypeId != null">
        #{productFinanceTypeId,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ibenben.domain.SupplierProductMapping" >
    update supplier_product_mapping
    <set >
      <if test="productSupplierId != null" >
        product_supplier_id = #{productSupplierId,jdbcType=BIGINT},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="taxRate != null" >
        tax_rate = #{taxRate,jdbcType=INTEGER},
      </if>
      <if test="deductionRate != null" >
        deduction_rate = #{deductionRate,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        created_user = #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="productCategoryId != null">
        product_category_id = #{productCategoryId,jdbcType=INTEGER},
      </if>
      <if test="outputRate != null">
        output_rate = #{outputRate,jdbcType=INTEGER},
      </if>
      <if test="productFinanceTypeId != null">
        product_finance_type_id = #{productFinanceTypeId,jdbcType=INTEGER}
      </if>
    </set>
    where supplier_product_mapping_id = #{supplierProductMappingId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ibenben.domain.SupplierProductMapping" >
    update supplier_product_mapping
    set product_supplier_id = #{productSupplierId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=INTEGER},
      tax_rate = #{taxRate,jdbcType=INTEGER},
      deduction_rate = #{deductionRate,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_user = #{createdUser,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      product_category_id = #{productCategoryId,jdbcType=INTEGER},
      output_rate = #{outputRate,jdbcType=INTEGER},
      product_finance_type_id = #{productFinanceTypeId,jdbcType=INTEGER}
    where supplier_product_mapping_id = #{supplierProductMappingId,jdbcType=BIGINT}
  </update>
</mapper>